/* CSS reset */
*, *:before, *:after { 
    margin:0;
    padding:0;
    font-family: Arial,sans-serif;
  }
   
  /* remove a linha dos links */
  a{
    text-decoration: none;
  }
   
  /* esconde as ancoras da tela */
  a.links{
    display: none;
  }
  
  /* Nos códigos acima, resetamos o CSS e tiramos a linha ( underline ) dos links e escondemos as ancoras ( a.links ).
  
  2° Passo: */
  
  .content{
    width: 500px;
    min-height: 560px;    
    margin: 0px auto;
    position: relative;   
  }
  
  /* Criamos a classe ( .content ) que vai envolver nosso conteúdo, ou seja, nossos formulários.
  
  3° Passo: */
  
  h1{
    font-size: 48px;
    color: #066a75;
    padding: 2px 0 10px 0;
    font-family: Arial,sans-serif;
    font-weight: bold;
    text-align: center;
    padding-bottom: 30px;
  }
  
  /* Estilizamos o cabeçalho dos formulários atacando o ( h1 ).
  
  4° Passo: */
  
  h1:after{
    content: ' ';
    display: block;
    width: 100%;
    height: 2px;
    margin-top: 10px;
    /*background: -webkit-linear-gradient(left, rgba(147,184,189,0) 0%,rgba(147,184,189,0.8) 20%,rgba(147,184,189,1) 53%,rgba(147,184,189,0.8) 79%,rgba(147,184,189,0) 100%); */
    background: linear-gradient(left, rgba(147,184,189,0) 0%,rgba(147,184,189,0.8) 20%,rgba(147,184,189,1) 53%,rgba(147,184,189,0.8) 79%,rgba(147,184,189,0) 100%); 
  }
  
  /* O código acima, cria uma barra abaixo do texto do cabeçalho separando do conteúdo. Para isso utilizamo o Pseudo Elementos ( :after ) com seus próprios estilos.
  
  5° Passo: */
  
  p{
    margin-bottom:15px;
  }
   
  .content p:first-child{
    margin: 0px;
  }
   
  label{
    color: #405c60;
    position: relative;
  }
  
 /*  Definimos alguns estilos nas classes acima para termos o resultado esperado.
  
  6° Passo: */
  
  /* placeholder */
  ::-webkit-input-placeholder  {
    color: #bebcbc; 
    font-style: italic;
  }
   
  input:-moz-placeholder,
  textarea:-moz-placeholder{
    color: #bebcbc;
    font-style: italic;
  }
  
  /* Acima definimos os estilos do ( placeholder ).
  
  7° Passo: */
  
  input {
    outline: none;
  }
   
  /*estilo dos input,  menos o checkbox */
  input:not([type="checkbox"]){
    width: 95%;
    margin-top: 4px;
    padding: 10px;    
    border: 1px solid #b2b2b2;
   
    -webkit-border-radius: 3px;
    border-radius: 3px;
   
    -webkit-box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.6) inset;
    box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.6) inset;
   
    -webkit-transition: all 0.2s linear;
    transition: all 0.2s linear;
  }
   
  /*estilo do botão submit*/
  input[type="submit"]{
    width: 100%!important;
    cursor: pointer;  
    background: rgb(61, 157, 179);
    padding: 8px 5px;
    color: #fff;
    font-size: 20px;  
    border: 1px solid #fff;   
    margin-bottom: 10px;  
    text-shadow: 0 1px 1px #333;
   
    -webkit-border-radius: 5px;
    border-radius: 5px;
   
    transition: all 0.2s linear;
  }
   
  estilo do botão submit no hover */
  input[type="submit"]:hover{
    background: #4ab3c6;
  }
  
  /* Nos códigos acima, definimos alguns estilos para os campos ( input ) dos formulários, incluindo o ( submit ).
  
  8° Passo: */
  
  .link{
    position: absolute;
    background: #e1eaeb;
    color: #7f7c7c;
    left: 0px;
    height: 20px;
    width: 440px;
    padding: 17px 30px 20px 30px;
    font-size: 16px;
    text-align: right;
    border-top: 1px solid #dbe5e8;
   
    -webkit-border-radius: 0 0  5px 5px;
    border-radius: 0 0  5px 5px;
  }
   
  .link a {
    font-weight: bold;
    background: #f7f8f1;
    padding: 6px;
    color: rgb(29, 162, 193);
    margin-left: 10px;
    border: 1px solid #cbd518;
   
    -webkit-border-radius: 4px;
    border-radius: 4px;  
   
    -webkit-transition: all 0.4s linear;
    transition: all 0.4s  linear;
  }
   
  .link a:hover {
    color: #39bfd7;
    background: #f7f7f7;
    border: 1px solid #4ab3c6;
  }
  
  /* Nos códigos acima, estilizamos os links que vai mudar de um formulário para outro ao clicar. Pode fazer os estilos de acordo com seu Layout.
  
  9° Passo: */
  
  #cadastro, 
  #login{
    position: absolute;
    top: 0px;
    width: 88%;   
    padding: 18px 6% 60px 6%;
    margin: 0 0 35px 0;
    background: #f7f7f7;
    border: 1px solid rgba(147, 184, 189,0.8);
     
    
    border-radius: 5px;
     
    -webkit-animation-duration: 0.5s;
    -webkit-animation-timing-function: ease;
    -webkit-animation-fill-mode: both;
   
    animation-duration: 0.5s;
    animation-timing-function: ease;
    animation-fill-mode: both;
  }
  
  /* Nos códigos acima, definimos os estilos para ambos os formulários e definimos a animação entre ambos.
  
  10° Passo: */
  
  /* Efeito ao clicar no botão ( Ir para Login ) */
  #paracadastro:target ~ .content #cadastro,
  #paralogin:target ~ .content #login{
    z-index: 2;
    -webkit-animation-name: fadeInLeft;
    animation-name: fadeInLeft;
   
    -webkit-animation-delay: .1s;
    animation-delay: .1s;
  }
   
  /* Efeito ao clicar no botão ( Cadastre-se ) */
  #registro:target ~ .content #login,
  #paralogin:target ~ .content #cadastro{
    -webkit-animation-name: fadeOutLeft;
    animation-name: fadeOutLeft;
  }
  
 /*  Nos códigos acima, definimos os efeitos ao clicar em determinado botão ( Cadastre-se ou Ir para Login ).
  
  Veja que agora chamamos os efeitos ( fadeInLeft ) e ( fadeOutLeft ) ambos criados com ( @keyframes ) que criamos nos códigos abaixo.
  
  11° Passo: */
  
  /*fadeInLeft*/
  @-webkit-keyframes fadeInLeft {
    0% {
      opacity: 0;
      -webkit-transform: translateX(-20px);
    }
    100% {
      opacity: 1;
      -webkit-transform: translateX(0);
    }
  }
   
  @keyframes fadeInLeft {
    0% {
      opacity: 0;
      transform: translateX(-20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
   
  /*fadeOutLeft*/
  @-webkit-keyframes fadeOutLeft {
    0% {
      opacity: 1;
      -webkit-transform: translateX(0);
    }
    100% {
      opacity: 0;
      -webkit-transform: translateX(-20px);
    }
  }
   
  @keyframes fadeOutLeft {
    0% {
      opacity: 1;
      transform: translateX(0);
    }
    100% {
      opacity: 0;
      transform: translateX(-20px);
    }
  }